const mongoose = require('mongoose');
const uuidv4 = require('uuid/v4');
const schemaCreator = require('../../utilities/schemaCreator');

const schema = schemaCreator.createSchema(
  {
    _id: {
      type: String,
      default: uuidv4,
    },
    /**
     * @name authorizationCode
     * @description Authorisation code generated by platform-authentication
     * @type String
     * @memberof Register
     * @inner
     */
    authorizationCode: {
      type: String,
    },
    /**
     * @name nonce
     * @description A one time code for a request between the wallet and platform-core
     * @type String
     * @memberof Register
     * @required
     * @inner
     */
    nonce: {
      type: String,
      required: true,
    },
    /**
     * @name nonceExpiry
     * @description The expiry of the nonce
     * @type String
     * @memberof Register
     * @required
     * @inner
     */
    nonceExpiry: {
      type: String,
      required: true,
    },
    /**
     * @name publicKey
     * @description The public key of a wallet
     * @type String
     * @memberof Register
     * @required
     * @inner
     */
    publicKey: {
      type: String,
      required: true,
      unique: true,
    },
    /**
     * @name uuid
     * @description A random unique identifier used for the registration process
     * @type String
     * @memberof Register
     * @required
     * @inner
     */
    uuid: {
      type: String,
      required: true,
      unique: true,
    },
    /**
     * @name walletId
     * @description The ID of a wallet that's created as part of the registration flow
     * @type String
     * @memberof Register
     * @inner
     */
    walletId: {
      type: String,
    },
  },
  {
    versionKey: false,
    timestamps: true,
  },
);

/**
 * @namespace Register
 * @name Register
 * @description Register model
 */
module.exports = mongoose.model('Register', schema);
